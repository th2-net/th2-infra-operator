/*
 * Copyright 2020-2021 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'checkstyle'
    id "io.gitlab.arturbosch.detekt" version "${detekt_version}"
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
}

group = 'com.exactpro.th2'
version = release_version

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = "8.26"
}

detekt {
    buildUponDefaultConfig = true
    autoCorrect = true
    config = files("$rootDir/config/detekt/detekt.yml")
}

ext {
    jackson_databind_version = '2.13.3'
    jackson_dataformat_version = '2.13.3'
    jackson_kotlin_version = '2.13.2'
    uuid_generator_version = '4.0.1'
    okhttp_version = '4.10.0'
    commons_text_version = '1.9'
    fabric8_version = '5.12.2'
    rabbit_amqp_version = '5.14.2'
    rabbit_http_version = '4.1.2'
    springweb_version = '5.3.20'
    slf4j_api_version = '1.7.36'
    log4j_slf4j_impl_version = '2.17.2'
    jetbrains_annotations_version = '23.0.0'
    prometheus_version = '0.15.0'
    mockito_version = '3.11.2'
    jupiter_version = '5.8.2'
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_databind_version}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson_dataformat_version}"
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "${jackson_kotlin_version}"
    implementation "com.fasterxml.uuid:java-uuid-generator:${uuid_generator_version}"

    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"

    implementation "org.apache.commons:commons-text:${commons_text_version}"

    implementation "io.fabric8:kubernetes-client:${fabric8_version}"
    implementation "com.rabbitmq:amqp-client:${rabbit_amqp_version}"
    implementation "com.rabbitmq:http-client:${rabbit_http_version}"
    implementation "org.springframework:spring-web:${springweb_version}"

    implementation "org.slf4j:slf4j-api:${slf4j_api_version}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_slf4j_impl_version}"

    implementation "org.jetbrains:annotations:${jetbrains_annotations_version}"

    implementation "io.prometheus:simpleclient:${prometheus_version}"
    implementation "io.prometheus:simpleclient_httpserver:${prometheus_version}"
    implementation "io.prometheus:simpleclient_hotspot:${prometheus_version}"

    testImplementation group: 'org.mockito', name: 'mockito-core', version: "${mockito_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiter_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiter_version}"

    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:${detekt_version}")
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Main-Class': 'com.exactpro.th2.infraoperator.Th2CrdController',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
